(()=>{var p=class{constructor(t){this.workers=[],this.max=4,this.count=0,this.options=t||{type:"classic"}}create(t,r){let e=this.createWorker(t,r);return this.workers.push(e),e}terminateAll(){this.workers.forEach(t=>t.terminate()),this.workers.length=0}list(){return this.workers}async runAll(t){let r=[],e=0;for(;e<this.workers.length;){let o=Math.min(this.workers.length-e,this.max-this.count),i=this.workers.slice(e,e+o).map(s=>s.run(t).finally(()=>{this.count--}));this.count+=o,e+=o;let a=await Promise.all(i);r.push(...a)}return r}createWorker(t,r=[]){let e={status:"init",progress:0,result:null,error:null},o=r.map(n=>URL.createObjectURL(new Blob([`self.${n.name}=${n.value.toString()};`]))),i=new Blob([...o,`self.onmessage=${t.toString()};`],{type:"text/javascript"}),a=URL.createObjectURL(i),s=new Worker(a,this.options),c=!1,l=[],u=s.onmessage||(()=>{});s.onmessage=n=>c?l.push(n):u(n);let h={_shell:s,run:n=>this.run(s,n),terminate:()=>this.terminate(h),subscribe:n=>s.addEventListener("message",n),unsubscribe:n=>s.removeEventListener("message",n),importScripts:(...n)=>{let m=n.map(g=>URL.createObjectURL(new Blob([g])));s.postMessage({type:"importScripts",data:m})},getState:()=>Object.assign({},e),pause:()=>c=!0,play:()=>{c=!1,l.length>0&&u(l.shift())}};return h}postMessageAll(t,r){this.workers.forEach(e=>{e._shell.postMessage(t,r)})}run(t,r){return new Promise((e,o)=>{let i=t.getState();i.status="running",t.setState(i),t.onerror=a=>{let s=t.getState();s.error=a.message,s.status="error",t.setState(s),o(a)},t.onmessage=a=>{let s=t.getState();s.result=a.data,s.status="finished",t.setState(s),e(a)},t.postMessage(r||={})})}terminate(t){let r=this.workers.indexOf(t);r!==-1&&this.workers.splice(r,1),t._shell.terminate()}};})();
